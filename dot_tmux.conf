set-option -g default-shell /bin/zsh

# # Use C-Space as prefix
# unbind-key C-b
# set-option -g prefix C-Space
# bind-key C-Space send-prefix

# Color config
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",tmux-256color:Tc,xterm-256color:Tc"
set-option -g focus-events on

# mouse config
set -g mouse on
# set -g mouse-select-window on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

# prevent <esc> delay in nvim
set -s escape-time 0

# vi mode
set -g status-keys vi
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# create splits with | and -
bind / split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Navigate windows with Alt-Maj-[h,l]
bind-key -n M-H select-window -p
bind-key -n M-L select-window -n
bind-key -n M-J switch-client -p
bind-key -n M-K switch-client -n

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#
# Uncomment this one when not using the config below
# set -g @plugin 'christoomey/vim-tmux-navigator'
#
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
# bind-key -n M-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
# bind-key -T copy-mode-vi 'M-\\' select-pane -l

# Silent tmux
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

# statusbar
set -g status-position top
set -g status-justify left
# middle part
# set -g status-style 'bg=colour240 fg=colour137 dim'
set -g status-left ''
# clock section
set -g status-right '#[fg=colour235,bg=colour243]%Y-%m-%d | %H:%M'
set -g status-right-length 50
set -g status-left-length 20
# active tab
setw -g window-status-current-style 'fg=colour1 bg=colour250 bold'
setw -g window-status-current-format ' #I#[fg=colour246]:#[fg=colour232]#W#[fg=colour246]#F '
# inactive tab
setw -g window-status-style 'fg=colour1 bg=colour246'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour235]#W#[fg=colour244]#F '
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
set -g status-style fg=white,bg=colour243

# messages
# set -g message-style 'fg=colour232 bg=colour16 bold'


# ===== Plugins =====
set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-sessionist'

# tmux resurerect
# auto restore session on tart
# set -g @continuum-restore 'on'

# === Plugins Init ==
# install tpm if not done already
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# initialise plugins
run -b '~/.tmux/plugins/tpm/tpm'


