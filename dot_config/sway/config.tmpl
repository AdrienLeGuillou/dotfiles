# Read `man 5 sway` for a complete reference.  also: https://i3wm.org/docs/userguide.html

### Variables

{{- if eq .chezmoi.hostname "Gallarus" }}
set $touchpad '1739:52392:DELL097C:00_06CB:CCA8_Touchpad'
{{- else if eq .chezmoi.hostname "GallarusC720"}}
set $touchpad '0:0:Cypress_APA_Trackpad_(cyapa)'
{{- else if eq .chezmoi.hostname "Gallarus14"}}
set $touchpad '1267:12770:DLL0B46:01_04F3:31E2_Touchpad'
{{ end }}

set $keyboard '1:1:AT_Translated_Set_2_keyboard'

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -matching fuzzy -show | xargs swaymsg exec --
# set $menu  tofi 'compgen -c | fzf --layout=reverse --prompt="run: " --tac | xargs swaymsg exec --'

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/wallpaper fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 404040' \
         timeout 305 'swaymsg "output eDP-1 dpms off"' \
              resume 'swaymsg "output eDP-1 dpms on"' \
         before-sleep 'swaylock -f -c 404040'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

bindsym Ctrl+$mod+s exec swayidle -w \
         timeout 1 'swaylock -f -c 404040' \
         timeout 2 'swaymsg "output eDP-1 dpms off"' \
              resume 'swaymsg "output eDP-1 dpms on"; pkill -nx swayidle' \
         before-sleep 'swaylock -f -c 404040'


bindsym Ctrl+$mod+Shift+s exec systemctl suspend

### Input configuration
input $touchpad {
    events disabled_on_external_mouse
    dwt enable
    middle_emulation enable
    natural_scroll enable
    tap enable
    drag enable
}

bindsym $mod+F9 exec swaymsg input $touchpad events toggle enabled disabled
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# man 7 xkeyboard-config for xkb_options
input $keyboard {
    xkb_layout enfr,us
    xkb_variant ,altgr-intl
    xkb_options caps:super,grp:win_space_toggle,shift:both_capslock
}

input * xkb_numlock enable

seat * hide_cursor when-typing enable

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Multiple monitor
#
    bindsym $mod+Alt+$left  focus output left
    bindsym $mod+Alt+$up    focus output up
    bindsym $mod+Alt+$right focus output right
    bindsym $mod+Alt+$down  focus output down

    bindsym $mod+Alt+Shift+$left  move to output left
    bindsym $mod+Alt+Shift+$up    move to output up
    bindsym $mod+Alt+Shift+$right move to output right
    bindsym $mod+Alt+Shift+$down  move to output down

    bindsym $mod+Ctrl+Shift+$left  move workspace to output left
    bindsym $mod+Ctrl+Shift+$up    move workspace to output up
    bindsym $mod+Ctrl+Shift+$right move workspace to output right
    bindsym $mod+Ctrl+Shift+$down  move workspace to output down

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    # Move focus to the last child container
    bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Volume management
#
bindsym XF86AudioMute exec pamixer -t
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioRaiseVolume exec pamixer -i 5

#
# Play/Pause player
#
bindsym XF86AudioPlay exec playerctl play-pause

#
# Backlight management
#
bindsym XF86MonBrightnessDown exec light -U 10
bindsym XF86MonBrightnessUp exec light -A 10

# kbd_backlight
#### works by default. Else, see .config/utilities/kbd_backlight_cycle.sh

#
# Status Bar:
#
bar {
    swaybar_command waybar
}

#
# Font
#
font Hack 9

#
# Visual
#
client.focused #5f676a #5f676a #ffffff #af3a03 #d65d0e
smart_borders on
default_border pixel 4
focus_follows_mouse no

#
# Utilities
#
## bindsym $mod+semicolon exec swayr switch-window
bindsym $mod+p exec bwmenu

bindsym $mod+z       exec shotman active
bindsym $mod+Shift+z exec shotman area
bindsym $mod+Alt+z   exec shotman output
bindsym $mod+Ctrl+z  exec shotman window

for_window [title="shotman"] move position 30 30, floating enable

# assign [app_id="org.qutebrowser.qutebrowser"] workspace number 10

include /etc/sway/config.d/*

exec kanshi # display profiles
exec mako # notification deamon

{{- if eq .chezmoi.hostname "Gallarus" }}
exec firefox
exec megasync_wayland
# exec blueman-applet # bluetooth
{{- else if eq .chezmoi.hostname "Gallarus14"}}
exec firefox
exec megasync_wayland
{{- else if eq .chezmoi.hostname "GallarusC720"}}

{{ end -}}

# exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec lxqt-policykit-agent
